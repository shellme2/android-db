apply plugin: 'com.android.library'

def gitHead = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTag = 'git describe --tags'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))

android {

    compileSdkVersion bfcBuildConfig.compileSdkVersion
    buildToolsVersion bfcBuildConfig.buildToolsVersion

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion bfcBuildConfig.minSdkVersion
        targetSdkVersion bfcBuildConfig.targetSdkVersion
        versionCode VERSION_CODE
        versionName VERSION_NAME

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "GIT_HEAD", "\"${gitHead}\""
        buildConfigField "String", "GIT_TAG", "\"${gitTag}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "String", "LIBRARY_NAME", "\"${POM_ARTIFACT_ID}\""

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // 从网络配置导入第三方library或者其他bfc库
    compile bfcBuildConfig.deps["support-annotations"]
    compile bfcBuildConfig.deps["bfc-log"]

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile bfcBuildConfig.deps["junit"]

    compile bfcBuildConfig.deps["greendao-generator"]
}

apply from:"http://172.28.2.93/bfc/Bfc/raw/develop/common-config/maven-push.gradle"
